local ROOT_MENU = "scene:/root_menu"
local VERTICAL_OFFSET = 320
local CARD_HORIZONTAL_OFFSET = 220
local MIN_BOX_POS_Y = 275
local CHARACTER_MANGER = "main:/character_manager"
local NEUTRAL = {
	{character="중립",img = "quick_attack",title="신속한 타격",effect="무작위 적에게 피해를 5 줍니다. 카드를 한장 뽑습니다.",cost=0},
	{character="중립",img = "first_aid_kit",title="응급 처치",effect="체력이 가장 낮은 아군 캐릭터의 체력을 10 회복시킵니다.",cost=0},
	{character="중립",img = "first_attack",title="선제 공격",effect="피해를 입지 않은 적에게 피해를 8 줍니다. 카드를 뽑습니다.",cost=0},
	{character="중립",img = "precise_hit",title="정밀 타격",effect="무작위 적에게 피해를 15 줍니다. 이 공격으로 대상이 죽으면, 이 카드를 내 덱에 섞어 넣습니다.",cost=1},
	{character="중립",img = "air_drop",title="공습 경보",effect="아군 포함 모든 캐릭터에게 피해를 10 줍니다.",cost=1},
	{character="중립",img = "guard_stance",title="방어 태세",effect="모든 아군 캐릭터가 방어도를 5 얻습니다. 카드를 한 장 뽑습니다.",cost=2},
	{character="중립",img = "timed_bomb",title="시한 폭탄",effect="3턴 뒤 모든 적에게 피해를 25 줍니다.",cost=2},
	{character="중립",img = "nearly_dead",title="기사 회생",effect="체력이 가장 낮은 아군 캐릭터의 생명력을 30 회복시킵니다.",cost=5}
}
local card = require "game.ui.module.card"
function init(self)
	msg.post(".", "acquire_input_focus")
	self.line_node = gui.get_node("line")
	self.box  = gui.get_node("box")
	self.window = gui.get_node("window")
	self.card_list_cross = gui.get_node("cross")
	self.card_per_line = 5
	self.card={}
	self.line_count=1
	msg.post(CHARACTER_MANGER, "request_card")
	
end

function update(self, dt)
	local pos = gui.get_position(self.box )
	if pos.y < MIN_BOX_POS_Y then
		pos.y = MIN_BOX_POS_Y
		gui.set_position(self.box, pos)
	end
	if pos.y > self.line_count * VERTICAL_OFFSET + 100 then
		pos.y = self.line_count * VERTICAL_OFFSET + 100
		gui.set_position(self.box , pos)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("box_expended") then
		local size = gui.get_size(self.box )
		self.line_count=self.line_count+1
		size.y = size.y + VERTICAL_OFFSET
	end
	if message_id == hash("response_card") then
		self.card = message.cards
		if #NEUTRAL>0 then
		for i=1,#NEUTRAL do
			table.insert(self.card, NEUTRAL[i])
		end
	end
		local sample =gui.get_node("card_sample/outter_frame")
		local line=self.line_node
		for i = 1, #self.card do
		
			if i%self.card_per_line == 1 and i ~= 1 then
				line = gui.clone(line)
				local line_pos = gui.get_position(line)
				print(line_pos)
				line_pos.y = line_pos.y - VERTICAL_OFFSET
				print(line_pos)
				gui.set_position(line, line_pos)
				msg.post(".", "box_expended")
			end
			local node = gui.clone_tree(sample)
			gui.set_parent(node[hash("card_sample/outter_frame")], line)
			local new_card = card.create(node,node[hash("card_sample/outter_frame")], pos,self.card[i].character,self.card[i].img,self.card[i].title, self.card[i].effect, self.card[i].cost)
			local pos = vmath.vector3(-650,0,0)
			if i%self.card_per_line == 0 then
				pos.x = pos.x + CARD_HORIZONTAL_OFFSET * self.card_per_line
			else
				pos.x = pos.x + CARD_HORIZONTAL_OFFSET * (i%self.card_per_line)
			end
			new_card:initialize()
			gui.set_position(new_card.node, pos)
			
		end
		
	end
end

function on_input(self, action_id, action)
	if action_id==hash("wheel_up") then
		if action.value == 1 then
			local pos = gui.get_position(self.box)
			pos.y = pos.y - 100
			gui.set_position(self.box, pos)
		end
	elseif action_id==hash("wheel_down") then
		if action.value == 1 then
			local pos = gui.get_position(self.box)
			pos.y = pos.y + 100
			gui.set_position(self.box, pos)
		end
	end

	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(self.card_list_cross, action.x, action.y) then
			gui.set_enabled(self.window , false)
			msg.post(".", "destory")
			msg.post(ROOT_MENU, "destroy")
		end
	end
	if action_id==hash("menu") and action.pressed then
		gui.set_enabled(self.window , false)
		msg.post(".", "release_input_focus")
		msg.post(".", "destory")
		
		msg.post(ROOT_MENU, "destroy")
	end
	
end