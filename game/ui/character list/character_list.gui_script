local card = require "game.ui.module.card"
local CARD_HORIZONTAL_OFFSET = 220
local MIN_CARD_BOX_POS_X = -600
local ROOT_MENU = "scene:/root_menu"
local CHARACTER_MANGER = "main:/character_manager"
local CHARACTER_NAME ={"군인","과학자","경찰","도박사"}
local CHARACTER_ANIM ={["군인"]="12",["과학자"]="4",["도박사"]="2",["경찰"]="11"}
function init(self)
	msg.post(".", "acquire_input_focus")
	self.card = {}
	self.card_box = gui.get_node("card_box")
	self.window = gui.get_node("window")
	self.card_list_cross = gui.get_node("cross")
	self.party={}
	self.slot={gui.get_node("slot2"),gui.get_node("slot3")}
	self.select=nil
	msg.post(CHARACTER_MANGER, "request_card")
	msg.post(CHARACTER_MANGER, "request_character")
end

function update(self, dt)
	local pos = gui.get_position(self.card_box)
	if pos.x > MIN_CARD_BOX_POS_X then
		pos.x = MIN_CARD_BOX_POS_X
		gui.set_position(self.card_box, pos)
	end
	if #self.card>0 then
		if pos.x < -(#self.card * CARD_HORIZONTAL_OFFSET) + 360 then
			pos.x = -(#self.card * CARD_HORIZONTAL_OFFSET) + 360
			gui.set_position(self.card_box, pos)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("card_box_expended") then
		local size = gui.get_size(self.card_box)
		size.x = size.x + CARD_HORIZONTAL_OFFSET
	end
	if message_id == hash("response_card") then
		self.card = message.cards
		local sample = gui.get_node("card_sample/outter_frame")
		for i = 1, #self.card do
			local node = gui.clone_tree(sample)
			local new_card = card.create(node,node[hash("card_sample/outter_frame")], pos,self.card[i].character,self.card[i].img,self.card[i].title, self.card[i].effect, self.card[i].cost)
			local pos = vmath.vector3(-120,0,0)
			pos.x = pos.x + CARD_HORIZONTAL_OFFSET * i
			new_card:initialize()
			gui.set_position(new_card.node, pos)
			msg.post(".", "card_box_expended")
		end
	end
	if message_id==hash("response_character") then
		for i=1,#CHARACTER_NAME do
			local party = message.party
			if party[CHARACTER_NAME[i]] then
				table.insert(self.party, CHARACTER_NAME[i])
				local slot = gui.get_node("slot"..tostring(#self.party))
				local character = gui.new_box_node(vmath.vector3(), vmath.vector3(120,160,0))
				gui.set_parent(character, slot)
				gui.set_texture(character, "character")
				gui.play_flipbook(character,CHARACTER_ANIM[CHARACTER_NAME[i]])
			end
		end
	end
end

function on_input(self, action_id, action)

	local action_pos=vmath.vector3(action.x,action.y,0)
	if action_id==hash("wheel_up") then
		if action.value == 1 then
			local pos = gui.get_position(self.card_box)
			pos.x = pos.x + 100
			gui.set_position(self.card_box, pos)
		end
	elseif action_id==hash("wheel_down") then
		if action.value == 1 then
			local pos = gui.get_position(self.card_box)
			pos.x = pos.x - 100
			gui.set_position(self.card_box, pos)
		end
	end

	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(self.card_list_cross, action.x, action.y) then
			gui.set_enabled(self.window, false)
			msg.post(".", "destory")
			msg.post(ROOT_MENU, "destroy")
		end
	end
	if action_id==hash("menu") and action.pressed  then
		gui.set_enabled(self.window, false)
		msg.post(".", "release_input_focus")
		msg.post(".", "destory")
		msg.post(ROOT_MENU, "destroy")
	end
end