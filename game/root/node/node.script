go.property("anim", 1)
go.property("clear", false)
local GM = "main:/game_manager"
go.property("location", vmath.vector3(0,0,0))
go.property("initial_scale", vmath.vector3(0.3,0.3,1))
local RM = "scene:/root_manager"
function init(self)
	go.set("#cross", "tint", vmath.vector4(1, 1, 1, 0.7)) -- <1>
	if not self.clear then
		msg.post("#cross", "disable")
	end
	if self.anim<10 then
		msg.post("#sprite", "play_animation",{id=hash("0"..tostring(self.anim))})
	else
		msg.post("#sprite", "play_animation",{id=hash(tostring(self.anim))})
	end
end
function on_message(self, message_id, message,sender)
	if message_id==hash("set_location") then
		self.location=message.location
	end
	if message_id ==hash("hover") then
		msg.post(RM, "hover",{player_pos= message.location,node=self.location})
	end
	if message_id==hash("hover_response") then
		if message.enable then
			go.set("#sprite", "tint", vmath.vector4(1, 1, 0, 1))
			go.set_scale(self.initial_scale*1.5)
		else
			go.set("#sprite", "tint", vmath.vector4(0.3, 0.3, 0.3, 1))
			go.set_scale(self.initial_scale*1.5)
		end
	end
	if message_id ==hash("leave") then
		go.set_scale(self.initial_scale)
		go.set("#sprite", "tint", vmath.vector4(1, 1, 1, 1))
	end
	if message_id==hash("move") then
		msg.post(RM, "move",{player_pos= message.location,node=self.location})
	end
	if message_id==hash("move_response") then
		print(message.enable)
		if message.enable then
			msg.post(GM, "move",{location=self.location})
		end
	end
end	